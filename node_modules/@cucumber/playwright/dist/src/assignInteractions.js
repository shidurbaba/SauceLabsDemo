"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const path_1 = __importDefault(require("path"));
function assignInteractions(thisObj, interactionsDir) {
    const files = fs_1.readdirSync(interactionsDir);
    for (const file of files) {
        const match = file.match(/(\.ts|\.js|\.tsx|\.jsx)$/);
        if (match) {
            const ext = match[1];
            const name = path_1.default.basename(file, ext);
            Object.defineProperty(thisObj, name, {
                value: loadInteraction(name),
            });
        }
    }
    function loadInteraction(name) {
        const path = `${interactionsDir}/${name}`;
        try {
            // eslint-disable-next-line @typescript-eslint/no-var-requires
            const interaction = require(path);
            return interaction[name];
        }
        catch (err) {
            return () => {
                throw new Error(`No interaction in: ${path}.{ts,js,tsx,jsx}`);
            };
        }
    }
}
exports.default = assignInteractions;
